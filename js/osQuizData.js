const osQuizData = [
  {
    question: "Can a modern computer operate effectively without any operating system installed?",
    options: [
      "Yes, with minimal software support",
      "No, hardware requires OS for coordination",
      "Only for embedded systems with fixed-function software",
      "It depends on the processor architecture",
    ],
    answer: 2,
  },
  {
    question: "Which statement best describes software execution on a system lacking an operating system?",
    options: [
      "Programs execute autonomously with direct hardware interaction",
      "Applications must include hardware management routines",
      "Programs rely on BIOS to manage resources",
      "They operate under a basic kernel substitute",
    ],
    answer: 1,
  },
  {
    question: "What primary function distinguishes an operating system from simple application software?",
    options: [
      "Controlling peripheral devices exclusively",
      "Facilitating concurrent execution and resource abstraction",
      "Replacing firmware on hardware",
      "Serving as an interface for network protocols",
    ],
    answer: 1,
  },
  {
    question: "What is the principal role of the bootloader during system startup?",
    options: [
      "Loading the OS kernel into memory and transferring control",
      "Verifying user credentials before booting",
      "Managing runtime hardware interrupts",
      "Maintaining filesystem integrity",
    ],
    answer: 0,
  },
  {
    question: "Which kernel architecture typically offers superior runtime performance due to integrated services?",
    options: [
      "Monolithic kernel",
      "Microkernel",
      "Exokernel",
      "Hybrid kernel",
    ],
    answer: 0,
  },
  {
    question: "In which kernel design are services run in isolated processes to improve fault tolerance and security?",
    options: [
      "Monolithic kernel",
      "Microkernel",
      "Hybrid kernel",
      "Nanokernel",
    ],
    answer: 1,
  },
  {
    question: "What critical information is maintained within a Process Control Block (PCB)?",
    options: [
      "Encrypted user credentials",
      "Execution context including program counter and CPU registers",
      "Kernel memory mapping details",
      "Filesystem access logs",
    ],
    answer: 1,
  },
  {
    question: "User-level programs typically execute in which processor mode to ensure system stability?",
    options: [
      "Supervisor mode",
      "User mode",
      "Kernel mode",
      "System management mode",
    ],
    answer: 1,
  },
  {
    question: "What key operation is handled by the process dispatcher in an OS?",
    options: [
      "Creating process instances",
      "Switching CPU context between processes",
      "Allocating memory to processes",
      "Responding to hardware interrupts",
    ],
    answer: 1,
  },
  {
    question: "Hardware interrupts are primarily generated by which components?",
    options: [
      "Peripheral devices signaling events",
      "Operating system kernel requests",
      "User application requests",
      "System scheduler commands",
    ],
    answer: 0,
  },
  {
    question: "How is context switching defined in process management?",
    options: [
      "Suspending one process and loading anotherâ€™s state onto the CPU",
      "Saving a file to secondary storage",
      "Launching a new process instance",
      "Executing a high-priority thread",
    ],
    answer: 0,
  },
  {
    question: "Which scheduling technique allows a process to run uninterrupted until it terminates or voluntarily yields?",
    options: [
      "Round Robin",
      "Non-preemptive scheduling",
      "Preemptive scheduling",
      "Multi-level queue scheduling",
    ],
    answer: 1,
  },
  {
    question: "What is the defining characteristic of round robin scheduling?",
    options: [
      "Processes are prioritized by urgency",
      "Each process receives fixed time slices cyclically",
      "Processes run until I/O wait",
      "Processes execute based on memory usage",
    ],
    answer: 1,
  },
  {
    question: "Virtual memory enables a process to:",
    options: [
      "Access storage faster than RAM",
      "Use more memory than physically installed through address mapping",
      "Share physical memory directly with other processes",
      "Operate without paging",
    ],
    answer: 1,
  },
  {
    question: "Inter Process Communication (IPC) mechanisms are designed to:",
    options: [
      "Coordinate and share data between independent processes",
      "Manage virtual memory allocation",
      "Optimize CPU scheduling",
      "Handle device driver operations",
    ],
    answer: 0,
  },
  {
    question: "Multi-threading primarily benefits a process by:",
    options: [
      "Increasing CPU usage inefficiency",
      "Allowing concurrent execution paths within a single address space",
      "Reducing process memory footprint",
      "Isolating threads from each other",
    ],
    answer: 1,
  },
  {
    question: "A single thread causing a process crash is usually due to:",
    options: [
      "Isolated address spaces for threads",
      "Unsafe shared memory operations within process",
      "Thread starvation",
      "Excessive CPU priority",
    ],
    answer: 1,
  },
  {
    question: "Which scheduling algorithm minimizes average waiting time by executing the shortest jobs first?",
    options: [
      "Priority scheduling",
      "First Come First Serve",
      "Shortest Job First (SJF)",
      "Round Robin",
    ],
    answer: 2,
  },
  {
    question: "Preemptive scheduling allows:",
    options: [
      "Processes to be interrupted for higher priority tasks",
      "Processes to run without interruption",
      "CPU allocation based on process arrival order",
      "Static time slicing between processes",
    ],
    answer: 0,
  },
  {
    question: "How would you best describe a process in an OS?",
    options: [
      "A hardware abstraction layer",
      "An executing instance of a program with associated resources",
      "A kernel subroutine",
      "A filesystem object",
    ],
    answer: 1,
  },
  {
    question: "Which of the following is not considered a traditional process state?",
    options: [
      "New",
      "Ready",
      "Idle",
      "Blocked",
    ],
    answer: 2,
  },
  {
    question: "Which task is NOT typically performed by an operating system?",
    options: [
      "Managing memory and processes",
      "Providing user interfaces",
      "Manufacturing hardware components",
      "Handling device drivers",
    ],
    answer: 2,
  },
  {
    question: "During system boot, initialization primarily involves:",
    options: [
      "Running diagnostics and loading essential drivers",
      "Immediate launch of user applications",
      "Formatting storage devices",
      "Enabling network connections",
    ],
    answer: 0,
  },
  {
    question: "What does the acronym MMU refer to?",
    options: [
      "Main Memory Unit",
      "Memory Management Unit",
      "Multiple Module Utility",
      "Machine Maintenance Unit",
    ],
    answer: 1,
  },
  {
    question: "Operating systems use which structure to organize and access data on physical storage?",
    options: [
      "File system",
      "Network protocol",
      "Bootloader",
      "Kernel scheduler",
    ],
    answer: 0,
  },
  {
    question: "In memory management, paging involves:",
    options: [
      "Mapping virtual memory to fixed-size physical blocks",
      "Loading entire processes sequentially",
      "Allocating contiguous memory blocks",
      "Interrupt-driven memory access",
    ],
    answer: 0,
  },
  {
    question: "What is the phenomenon of thrashing in an OS?",
    options: [
      "Excessive paging that drastically reduces system performance",
      "Efficient multitasking under heavy loads",
      "Process synchronization technique",
      "Hardware overheating warning",
    ],
    answer: 0,
  },
  {
    question: "Multitasking in operating systems refers to:",
    options: [
      "Concurrent execution of multiple processes",
      "Sequential running of programs",
      "Installation of multiple OS versions",
      "Running only system-level tasks",
    ],
    answer: 0,
  },
  {
    question: "Which responsibility best describes the OS kernel?",
    options: [
      "Managing hardware and system resources",
      "Providing user-friendly interfaces",
      "Storing user files securely",
      "Controlling internet access",
    ],
    answer: 0,
  },
  {
    question: "Which of the following is generally NOT considered a core OS component?",
    options: [
      "Device Drivers",
      "Process Management",
      "File System",
      "Web Browser",
    ],
    answer: 3,
  },
  // New added questions
  {
    question: "Which technique is used by operating systems to prevent deadlocks?",
    options: [
      "Preemption and resource allocation graphs",
      "Round robin scheduling",
      "Priority inversion",
      "Virtual memory swapping",
    ],
    answer: 0,
  },
  {
    question: "What does a 'race condition' in OS processes refer to?",
    options: [
      "Processes competing for CPU time equally",
      "Unsynchronized access to shared resources causing unexpected results",
      "Deadlock between two processes",
      "An interrupt occurring during process execution",
    ],
    answer: 1,
  },
  {
    question: "What is the primary purpose of a semaphore in OS?",
    options: [
      "Allocating memory dynamically",
      "Synchronizing access to shared resources",
      "Scheduling processes",
      "Handling file permissions",
    ],
    answer: 1,
  },
  {
    question: "Which of these is NOT a valid method for process synchronization?",
    options: [
      "Mutex",
      "Spinlock",
      "Polling",
      "Fragmentation",
    ],
    answer: 3,
  },
  {
    question: "In virtual memory systems, what is a 'page fault'?",
    options: [
      "A failed attempt to allocate physical memory",
      "An interrupt triggered when a program accesses a page not in RAM",
      "A corrupted memory page",
      "A hardware failure in the memory module",
    ],
    answer: 1,
  },
  {
    question: "Which file system attribute helps the OS efficiently manage disk space?",
    options: [
      "Inode",
      "Cache size",
      "Swap file",
      "Boot sector",
    ],
    answer: 0,
  },
  {
    question: "What is the role of the system call interface in an OS?",
    options: [
      "Allowing user programs to request services from the kernel",
      "Managing hardware interrupts",
      "Scheduling processes for execution",
      "Encrypting user data",
    ],
    answer: 0,
  },
  {
    question: "Which of the following best describes a 'zombie process'?",
    options: [
      "A process that is currently running",
      "A process that has terminated but still has an entry in the process table",
      "A process waiting for I/O",
      "A process with highest priority",
    ],
    answer: 1,
  },
  {
    question: "What is 'thrashing' most commonly caused by in a virtual memory system?",
    options: [
      "Too many page swaps due to insufficient physical memory",
      "Hardware overheating",
      "Excessive CPU usage by kernel processes",
      "File system corruption",
    ],
    answer: 0,
  },
  {
    question: "Which of the following best explains 'priority inversion'?",
    options: [
      "High priority process is blocked waiting for a low priority one",
      "Processes switching priorities dynamically",
      "CPU schedules processes based on priority",
      "Processes with same priority running concurrently",
    ],
    answer: 0,
  },
];
